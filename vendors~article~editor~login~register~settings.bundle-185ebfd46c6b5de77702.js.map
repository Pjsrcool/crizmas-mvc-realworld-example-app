{"version":3,"sources":["webpack:///./node_modules/crizmas-form/src/form.js","webpack:///./node_modules/crizmas-components/src/utils.js","webpack:///./node_modules/crizmas-components/src/components/input.js"],"names":["Input","config","name","validate","init","actions","parent","root","onFormChange","preventInputPendingBlocking","preventPendingBlocking","getValue","setValue","children","initialValue","clearValue","childrenMap","Map","isSelfInputPending","input","isDirty","isTouched","isInputPending","isSubmitted","hasErrors","errors","isPending","isPendingBlocked","addChildToMap","child","has","Error","set","onChange","val","call","markAsInputPending","markAsDirty","markAsTouched","event","target","callOnFormChange","some","hasDirtyChildren","forEach","touchedInput","map","push","error","Array","isArray","Form","asyncValidationError","length","changeHandlingInput","onStartPending","pendingInput","onBlur","submit","args","isBlocked","apply","getResult","size","result","reset","resetInternal","clear","hasOwnProperty","get","add","childConfig","index","addChild","childInput","setRoot","splice","remove","removeChild","childIndex","indexOf","delete","value","Object","assign","initInput","debounce","func","delay","timeout","clearTimeout","setTimeout","this","function","createElement","numberRegExp","partialNumberRegExp","integerRegExp","partialIntegerRegExp","allowedHtmlInputTypes","isBoolHtmlInputType","type","valuesNormalizer","number","undefined","Number","integer","string","trim","text","textarea","valueTypesGuards","test","valueChangeGuards","oldValue","Component","super","state","props","initOnChange","bind","setOnChangeMethod","setOnBlurMethod","prevProps","setState","e","checked","valueTypeGuard","valueChangeGuard","normalizer","normalizedValue","inputDebounce","getInputDebounce","context","required","placeholder","className","readOnly","disabled","autoFocus","inputClassName","inputProps","includes","i","key","propTypes","any","oneOf","array","bool","object","defaultProps","contextTypes"],"mappings":"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","file":"vendors~article~editor~login~register~settings.bundle-185ebfd46c6b5de77702.js","sourcesContent":["import {controller, observe, ignore, addObservedChild, removeObservedChild, isVal, isFunc,\n  awaitFor, awaitAll} from 'crizmas-mvc';\n\nexport const Input = controller(function (config = {}) {\n  const {name, validate, init, actions, parent, root, onFormChange,\n    preventInputPendingBlocking, preventPendingBlocking} = config;\n  let {getValue, setValue, children, initialValue, clearValue} = config;\n  let childrenMap = new Map();\n  let isSelfInputPending = false;\n\n  const input = {\n    name,\n    actions,\n    isDirty: false,\n    isTouched: false,\n    isInputPending: false,\n    isSubmitted: false,\n    hasErrors: false,\n    errors: null,\n    parent,\n    initialValue,\n\n    get isPendingBlocked() {\n      return (!preventPendingBlocking && input.isPending)\n        || (!preventInputPendingBlocking && input.isInputPending);\n    },\n\n    get isBlocked() {\n      return input.hasErrors || input.isPendingBlocked;\n    }\n  };\n\n  input.onFormChange = onFormChange;\n\n  const initInput = () => {\n    input.root = root || input;\n\n    input.getValue = ignore(getValue);\n\n    if (!input.getValue !== !setValue) {\n      throw new Error('getValue and setValue must be either both provided or both absent.');\n    }\n\n    if (input.getValue) {\n      if (config.hasOwnProperty('initialValue')) {\n        throw new Error('Cannot provide an initial value if getValue was provided.');\n      }\n\n      input.initialValue = input.getValue();\n    } else {\n      // input.value must not be created if a getValue is passed\n      input.value = input.initialValue;\n\n      input.getValue = ignore(() => input.value);\n      // if getValue is absent then setValue is absent\n      setValue = (val) => input.value = val;\n    }\n\n    input.children = children = children && children.map((child) =>\n      new Input(Object.assign({}, child, {root: input.root, parent: input})));\n\n    if (children) {\n      children.forEach(addChildToMap);\n    }\n\n    observe(actions);\n  };\n\n  const addChildToMap = (child) => {\n    if (isVal(child.name)) {\n      if (childrenMap.has(child.name)) {\n        throw new Error(`Duplicate child name: ${child.name}`);\n      }\n\n      childrenMap.set(child.name, child);\n    }\n  };\n\n  input.onChange = (val) => {\n    isSelfInputPending = false;\n\n    setValue.call(input, val);\n    input.markAsInputPending();\n    input.root.markAsDirty();\n    markAsTouched();\n    input.root.validate({event: 'change', target: input});\n    callOnFormChange();\n  };\n\n  input.markAsInputPending = () => {\n    input.isInputPending = isSelfInputPending\n      || (!!children && children.some((child) => child.isInputPending));\n\n    if (input.parent) {\n      input.parent.markAsInputPending();\n    }\n  };\n\n  input.markAsDirty = () => {\n    let hasDirtyChildren = false;\n\n    if (children) {\n      children.forEach((child) => {\n        child.markAsDirty();\n\n        if (child.isDirty) {\n          hasDirtyChildren = true;\n        }\n      });\n    }\n\n    input.isDirty = hasDirtyChildren || input.getValue() !== input.initialValue;\n  };\n\n  const markAsTouched = () => {\n    let touchedInput = input;\n\n    do {\n      touchedInput.isTouched = true;\n      touchedInput = touchedInput.parent;\n    } while (touchedInput);\n  };\n\n  input.validate = ({event, target = input} = {}) => {\n    const errors = [];\n\n    input.errors = null;\n    input.hasErrors = false;\n\n    // no child should reject as, below, the validate on the current item\n    // is caught and the error is set to the generic error\n    return awaitAll(children && children.map((child) => child.validate({event, target})), () => {\n      if (children) {\n        children.forEach((child) => {\n          if (child.hasErrors) {\n            errors.push(...child.errors);\n          }\n        });\n      }\n\n      return awaitFor(validate && awaitFor(validate.call(input, {input, event, target}),\n        (error) => {\n          if (error) {\n            if (Array.isArray(error)) {\n              errors.push(...error);\n            } else {\n              errors.push(error);\n            }\n          }\n        }, (error) => {\n          errors.push(isFunc(Form.asyncValidationError)\n            ? Form.asyncValidationError(error)\n            : Form.asyncValidationError);\n        }), () => {\n          if (errors.length) {\n            input.errors = errors;\n            input.hasErrors = true;\n          } else {\n            // even though we set the errors to null before awaiting, we need to set them again\n            // because it's possible that there was another validation done in the meantime\n            input.errors = null;\n            input.hasErrors = false;\n          }\n        });\n    });\n  };\n\n  const callOnFormChange = () => {\n    let changeHandlingInput = input;\n\n    do {\n      if (isFunc(changeHandlingInput.onFormChange)) {\n        changeHandlingInput.onFormChange({target: input, input: changeHandlingInput});\n      }\n\n      changeHandlingInput = changeHandlingInput.parent;\n    } while (changeHandlingInput);\n  };\n\n  input.onStartPending = () => {\n    let pendingInput = input;\n\n    isSelfInputPending = true;\n\n    do {\n      pendingInput.isInputPending = true;\n      pendingInput = pendingInput.parent;\n    } while (pendingInput);\n  };\n\n  input.onBlur = () => {\n    markAsTouched();\n    input.root.validate({event: 'blur', target: input});\n  };\n\n  input.submit = (...args) => {\n    if (input.isBlocked) {\n      return;\n    }\n\n    input.isSubmitted = true;\n\n    input.validate({event: 'submit'});\n\n    // after validation must recheck if it's blocked\n    if (input.actions && input.actions.submit && !input.isBlocked) {\n      input.actions.submit.apply(input, args);\n    }\n  };\n\n  input.getResult = ignore(() => {\n    if (children) {\n      if (!childrenMap.size || childrenMap.size !== children.length) {\n        return children.map((child) => child.getResult());\n      }\n\n      const result = {};\n\n      children.forEach((child) => {\n        result[child.name] = child.getResult();\n      });\n\n      return result;\n    }\n\n    return input.getValue();\n  });\n\n  input.reset = ({target = input} = {}) => {\n    if (target === input && input.isPendingBlocked) {\n      return;\n    }\n\n    if (children) {\n      children.forEach((child) => child.reset({target}));\n    }\n\n    resetInternal();\n\n    if (target === input) {\n      input.root.markAsDirty();\n      input.root.validate({event: 'reset', target: input});\n\n      // after validation must recheck if it's pending blocked\n      if (input.actions && input.actions.reset && !input.isPendingBlocked) {\n        input.actions.reset.call(input);\n      }\n    }\n  };\n\n  const resetInternal = () => {\n    setValue.call(input, input.initialValue);\n\n    input.isSubmitted = false;\n    input.isTouched = false;\n  };\n\n  input.clear = ({target = input} = {}) => {\n    if (target === input && input.isPendingBlocked) {\n      return;\n    }\n\n    if (children) {\n      children.forEach((child) => child.clear({target}));\n    }\n\n    if (config.hasOwnProperty('clearValue')) {\n      input.initialValue = clearValue;\n    } else if (input.initialValue) {\n      input.initialValue = null;\n    }\n\n    resetInternal();\n\n    if (target === input) {\n      input.root.markAsDirty();\n      input.root.validate({event: 'clear', target: input});\n\n      // after validation must recheck if it's pending blocked\n      if (input.actions && input.actions.clear && !input.isPendingBlocked) {\n        input.actions.clear.call(input);\n      }\n    }\n  };\n\n  input.get = ignore((name) => childrenMap.get(name));\n\n  input.add = (childConfig, index) => {\n    input.addChild(new Input(childConfig), index);\n  };\n\n  input.addChild = (childInput, index) => {\n    if (childInput.parent) {\n      throw new Error('The child input already has a parent.');\n    }\n\n    childInput.parent = input;\n\n    childInput.setRoot(input.root);\n\n    if (!children) {\n      input.children = children = [];\n    }\n\n    if (isVal(index)) {\n      children.splice(index, 0, childInput);\n    } else {\n      children.push(childInput);\n    }\n\n    addChildToMap(childInput);\n    addObservedChild(input, childInput);\n\n    input.markAsInputPending();\n    input.root.markAsDirty();\n    input.root.validate({event: 'add', target: input});\n  };\n\n  input.setRoot = (root) => {\n    input.root = root;\n\n    if (children) {\n      children.forEach((child) => child.setRoot(root));\n    }\n  };\n\n  input.remove = () => {\n    if (!input.parent) {\n      throw new Error('The input doesn\\'t have a parent.');\n    }\n\n    input.parent.removeChild(input);\n  };\n\n  input.removeChild = (child) => {\n    if (!children) {\n      throw new Error('Input doesn\\'t have the child.');\n    }\n\n    const childIndex = children.indexOf(child);\n\n    if (childIndex === -1) {\n      throw new Error('Input doesn\\'t have the child.');\n    }\n\n    children.splice(childIndex, 1);\n\n    if (isVal(child.name)) {\n      childrenMap.delete(child.name);\n    }\n\n    removeObservedChild(input, child);\n\n    child.parent = null;\n\n    child.setRoot(child);\n    input.markAsInputPending();\n    input.root.markAsDirty();\n    input.root.validate({event: 'remove', target: input});\n  };\n\n  initInput();\n\n  if (init) {\n    init.call(input, {input});\n  }\n\n  return input;\n});\n\nconst Form = controller(function (config) {\n  const root = new Input(config);\n\n  root.validate({event: 'init'});\n\n  return root;\n});\n\nexport default Form;\n\nForm.asyncValidationError = 'Validation failed';\n","let fitContentValue;\nlet stickyValue;\n\nexport const debounce = (func, delay) => {\n  let timeout;\n\n  // make sure the function is not a constructor\n  return ({\n    function(...args) {\n      clearTimeout(timeout);\n\n      timeout = setTimeout(() => {\n        func.apply(this, args);\n      }, delay);\n    }\n  }).function;\n};\n\nexport const getFitContentValue = () => {\n  if (!fitContentValue) {\n    fitContentValue = detectFitContentValue();\n  }\n\n  return fitContentValue;\n};\n\nconst detectFitContentValue = () => {\n  const div = document.createElement('div');\n\n  div.style.width = 'fit-content';\n\n  if (div.style.width === 'fit-content') {\n    return 'fit-content';\n  }\n\n  return '-moz-fit-content';\n};\n\nexport const getStickyValue = () => {\n  if (!stickyValue) {\n    stickyValue = detectStickyValue();\n  }\n\n  return stickyValue;\n};\n\nconst detectStickyValue = () => {\n  const div = document.createElement('div');\n\n  div.style.position = 'sticky';\n\n  if (div.style.position === 'sticky') {\n    return 'sticky';\n  }\n\n  // Safari requires the prefix\n  return '-webkit-sticky';\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {isVal} from 'crizmas-mvc';\n\nimport {debounce} from '../utils.js';\n\nconst {createElement} = React;\n\nconst defaultDebounce = 100;\nconst defaultBoolDebounce = 0;\nconst numberRegExp = /^(-|\\+)?(((\\d+(\\.\\d*)?)|(\\.\\d+))(e(-|\\+)?\\d+)?)$/i;\nconst partialNumberRegExp =\n  /^(-|\\+)?((\\d*(\\.\\d*)?)|((((\\d+(\\.\\d*)?)|(\\.\\d+))(e(-|\\+)?\\d*)?)?))$/i;\nconst integerRegExp = /^(-|\\+)?\\d+$/;\nconst partialIntegerRegExp = /^(-|\\+)?\\d*$/;\nconst allowedHtmlInputTypes = ['text', 'password', 'email', 'url', 'tel', 'search', 'hidden',\n  'radio', 'checkbox'];\n\nconst isBoolHtmlInputType = (type) => type === 'radio' || type === 'checkbox';\n\n// normalizers convert the final string to the expected value\nconst valuesNormalizer = {\n  number: (value, initialValue) => {\n    if (value === '') {\n      return initialValue === undefined\n        ? initialValue\n        : null;\n    }\n\n    return Number(value);\n  },\n\n  integer: (value, initialValue) => valuesNormalizer.number(value, initialValue),\n\n  string: (value) => value.trim(),\n\n  text: (value) => valuesNormalizer.string(value),\n\n  textarea: (value) => valuesNormalizer.string(value)\n};\n\n// type guards disallow unexpected characters in the input\nconst valueTypesGuards = {\n  number: (value) => {\n    return partialNumberRegExp.test(value);\n  },\n\n  integer: (value) => {\n    return partialIntegerRegExp.test(value);\n  }\n};\n\n// change guards prevent calling the onChange handler with temporary values.\n// an example is 3e for real numbers. the e character must be allowed because\n// the user could enter 3e2, but the intermediary value 3e must not be sent\n// to the client.\nconst valueChangeGuards = {\n  number: (value) => {\n    return value === '' || numberRegExp.test(value);\n  },\n\n  integer: (value) => {\n    return value === '' || integerRegExp.test(value);\n  },\n\n  string: (value, oldValue) => {\n    oldValue = oldValue || '';\n\n    if (typeof oldValue === 'string') {\n      return oldValue.trim() !== value.trim();\n    }\n\n    return true;\n  },\n\n  text: (value, oldValue) => valueChangeGuards.string(value, oldValue),\n\n  textarea: (value, oldValue) => valueChangeGuards.string(value, oldValue)\n};\n\nexport default class Input extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = {\n      value: this.props.value,\n      // last normalized value\n      oldValue: this.props.value\n    };\n\n    this.onChange = null;\n    this.onBlur = null;\n    this.initOnChange = this.initOnChange.bind(this);\n\n    this.setOnChangeMethod();\n    this.setOnBlurMethod();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.debounce !== prevProps.debounce) {\n      if (this.props.onChange !== prevProps.onChange) {\n        this.setOnChangeMethod();\n      }\n\n      if (this.props.onBlur !== prevProps.onBlur) {\n        this.setOnBlurMethod();\n      }\n    }\n\n    // we must ignore the same value when we have an intermediary string representation\n    // like 3.20 (after the 0 there can be a new decimal)\n    if (!this.props.isInputPending && this.props.value !== this.state.oldValue) {\n      this.setState({\n        value: this.props.value,\n        oldValue: this.props.value\n      });\n    }\n  }\n\n  initOnChange(e) {\n    const {type, isInputPending, onStartPending, onChange} = this.props;\n    const value = isBoolHtmlInputType(type)\n      ? e.target.checked\n      : e.target.value;\n    const valueTypeGuard = valueTypesGuards[type];\n\n    if (valueTypeGuard && !valueTypeGuard(value)) {\n      return;\n    }\n\n    this.setState({\n      value\n    });\n\n    const valueChangeGuard = valueChangeGuards[type];\n\n    if (valueChangeGuard && !valueChangeGuard(value, this.state.oldValue)) {\n      return;\n    }\n\n    const normalizer = valuesNormalizer[type];\n    const normalizedValue = normalizer\n      ? normalizer(value, this.props.initialValue)\n      : value;\n\n    this.setState({\n      oldValue: normalizedValue\n    });\n\n    if (!onChange) {\n      return;\n    }\n\n    if (!isInputPending && onStartPending) {\n      onStartPending();\n    }\n\n    this.onChange(normalizedValue);\n  }\n\n  setOnChangeMethod() {\n    const inputDebounce = this.getInputDebounce();\n\n    this.onChange = inputDebounce === 0\n      ? this.props.onChange\n      : debounce(this.props.onChange, inputDebounce);\n  }\n\n  getInputDebounce() {\n    return typeof this.props.debounce === 'number'\n      ? this.props.debounce\n      : isBoolHtmlInputType(this.props.type)\n        ? defaultBoolDebounce\n        : typeof this.context.inputDebounce === 'number'\n          ? this.context.inputDebounce\n          : defaultDebounce;\n  }\n\n  setOnBlurMethod() {\n    if (!this.props.onBlur) {\n      return void (this.onBlur = null);\n    }\n\n    const inputDebounce = this.getInputDebounce();\n\n    this.onBlur = inputDebounce === 0\n      ? this.props.onBlur\n      : debounce(this.props.onBlur, inputDebounce);\n  }\n\n  render() {\n    const {errors, type, required, placeholder, className, readOnly,\n      disabled, autoFocus, inputClassName, inputProps} = this.props;\n    const value = isVal(this.state.value)\n      ? this.state.value\n      : '';\n    const hasErrors = !!errors && !!errors.length;\n\n    return createElement(\n      'span',\n      {\n        className: `crizmas-input ${hasErrors ? 'has-errors' : ''} ${className}`\n      },\n      !!required && createElement('span', null, '*'),\n      createElement(\n        type === 'textarea' ? type : 'input',\n        Object.assign(\n          {},\n          inputProps,\n          {\n            value,\n            checked: isBoolHtmlInputType(type) && value,\n            type: allowedHtmlInputTypes.includes(type)\n              ? type\n              : 'text',\n            placeholder,\n            onChange: this.initOnChange,\n            onBlur: this.onBlur,\n            readOnly,\n            disabled,\n            autoFocus,\n            className: inputClassName\n          })),\n      hasErrors && createElement(\n        'span',\n        null,\n        errors.map((error, i) => createElement('span', {key: i}, error))));\n  }\n}\n\nInput.propTypes = {\n  value: propTypes.any,\n  initialValue: propTypes.any,\n  type: propTypes.oneOf([...allowedHtmlInputTypes, 'string', 'number', 'integer', 'textarea']),\n  errors: propTypes.array,\n  isInputPending: propTypes.bool,\n  required: propTypes.bool,\n  placeholder: propTypes.string,\n  className: propTypes.string,\n  inputClassName: propTypes.string,\n  debounce: propTypes.number,\n  onChange: propTypes.func,\n  onBlur: propTypes.func,\n  onStartPending: propTypes.func,\n  readOnly: propTypes.bool,\n  disabled: propTypes.bool,\n  autoFocus: propTypes.bool,\n  inputProps: propTypes.object\n};\n\nInput.defaultProps = {\n  type: 'text',\n  className: ''\n};\n\nInput.contextTypes = {\n  inputDebounce: propTypes.number\n};\n"],"sourceRoot":""}