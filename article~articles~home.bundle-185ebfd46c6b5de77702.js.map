{"version":3,"sources":["webpack:///./src/js/api/article.js","webpack:///./src/js/models/article.js","webpack:///./src/js/components/article-author.js","webpack:///./src/js/components/tag-list.js","webpack:///./src/js/controllers/article.js","webpack:///./src/js/date-utils.js"],"names":["normalizeDates","obj","createdAt","Date","updatedAt","handleArticlesResult","result","articles","forEach","getGlobalFeed","offset","limit","get","then","toJson","getOwnFeed","getTagFeed","tag","getOwnArticles","author","getFavoriteArticles","favorited","getArticle","slug","encodeURIComponent","article","saveArticle","title","description","body","tagList","post","getResponseErrors","updateArticle","put","setFavorite","isFavorite","del","getArticleComments","comments","deleteArticle","postComment","comment","deleteComment","commentId","Article","articleData","User","favoritesCount","unshift","index","findIndex","id","splice","ArticleAuthor","to","username","src","image","className","longDate","propTypes","PropTypes","object","isRequired","TagList","length","map","i","key","controller","currentUser","isAuthenticated","articleApi","router","transitionTo","Promise","reject","Error","longFormat","Intl","DateTimeFormat","month","day","year","date","format"],"mappings":"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","file":"article~articles~home.bundle-185ebfd46c6b5de77702.js","sourcesContent":["import {get, post, put, del} from '../http';\nimport {toJson, getResponseErrors} from './utils';\n\nconst normalizeDates = (obj) => {\n  obj.createdAt = new Date(obj.createdAt);\n  obj.updatedAt = new Date(obj.updatedAt);\n};\n\nconst handleArticlesResult = (result) => {\n  result.articles.forEach(normalizeDates);\n\n  return result;\n};\n\nexport const getGlobalFeed = ({offset, limit}) => {\n  return get('articles', {offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getOwnFeed = ({offset, limit}) => {\n  return get('articles/feed', {offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getTagFeed = ({tag, offset, limit}) => {\n  return get('articles', {tag, offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getOwnArticles = ({author, limit, offset}) => {\n  return get('articles', {author, offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getFavoriteArticles = ({favorited, limit, offset}) => {\n  return get('articles', {favorited, offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getArticle = ({slug}) => {\n  return get(`articles/${encodeURIComponent(slug)}`)\n    .then(toJson)\n    .then(({article}) => {\n      normalizeDates(article);\n\n      return {article};\n    });\n};\n\nexport const saveArticle = ({title, description, body, tagList}) => {\n  return post('articles', {\n    article: {\n      title,\n      description,\n      body,\n      tagList\n    }\n  }).then(toJson, getResponseErrors);\n};\n\nexport const updateArticle = ({slug, title, description, body, tagList}) => {\n  return put(`articles/${encodeURIComponent(slug)}`, {\n    article: {\n      title,\n      description,\n      body,\n      tagList\n    }\n  }).then(toJson, getResponseErrors);\n};\n\nexport const setFavorite = ({slug, isFavorite}) => {\n  const httpFunc = isFavorite ? post : del;\n\n  return httpFunc(`articles/${slug}/favorite`).then(toJson);\n};\n\nexport const getArticleComments = ({slug}) => {\n  return get(`articles/${encodeURIComponent(slug)}/comments`)\n    .then(toJson)\n    .then(({comments}) => {\n      comments.forEach(normalizeDates);\n\n      return {comments};\n    });\n};\n\nexport const deleteArticle = ({slug}) => {\n  return del(`articles/${encodeURIComponent(slug)}`);\n};\n\nexport const postComment = ({slug, comment}) => {\n  return post(`articles/${encodeURIComponent(slug)}/comments`, {\n    comment: {body: comment}\n  }).then(toJson).then(({comment}) => {\n    normalizeDates(comment);\n\n    return {comment};\n  });\n};\n\nexport const deleteComment = ({slug, commentId}) => {\n  return del(`articles/${encodeURIComponent(slug)}/comments/${commentId}`);\n};\n","import {User} from './user';\n\nexport function Article(articleData) {\n  const article = {\n    title: articleData.title,\n    author: new User(articleData.author),\n    description: articleData.description,\n    body: articleData.body,\n    slug: articleData.slug,\n    createdAt: articleData.createdAt,\n    updatedAt: articleData.updatedAt,\n    favorited: articleData.favorited,\n    favoritesCount: articleData.favoritesCount,\n    tagList: articleData.tagList,\n    comments: null\n  };\n\n  article.setFavorite = ({favorited, favoritesCount}) => {\n    article.favorited = favorited;\n    article.favoritesCount = favoritesCount;\n  };\n\n  article.setComments = (comments) => {\n    article.comments = comments;\n  };\n\n  article.addComment = (comment) => {\n    article.comments.unshift(comment);\n  };\n\n  article.deleteComment = (commentId) => {\n    const index = article.comments.findIndex((comment) => comment.id === commentId);\n\n    if (index !== -1) {\n      article.comments.splice(index, 1);\n    }\n  };\n\n  return article;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'crizmas-router';\n\nimport {longDate} from '../date-utils';\n\nconst ArticleAuthor = ({article}) => <span>\n  <Link to={`/@${encodeURIComponent(article.author.username)}`}>\n    <img src={article.author.image} />&nbsp;\n  </Link>\n  <div className=\"info\">\n    <Link\n      to={`/@${encodeURIComponent(article.author.username)}`}\n      className=\"author\">{article.author.username}</Link>\n    <span className=\"date\">{longDate(article.createdAt)}</span>\n  </div>\n</span>;\n\nArticleAuthor.propTypes = {\n  article: PropTypes.object.isRequired\n};\n\nexport default ArticleAuthor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TagList = ({article}) => !!article.tagList.length && <ul className=\"tag-list\">\n  {article.tagList.map((tag, i) => <li\n    key={i}\n    className=\"tag-default tag-pill tag-outline\">\n    {tag}\n  </li>)}\n</ul>;\n\nTagList.propTypes = {\n  article: PropTypes.object.isRequired\n};\n\nexport default TagList;\n","import {controller} from 'crizmas-mvc';\n\nimport {currentUser} from '../models/user';\nimport * as articleApi from '../api/article';\nimport router from '../router';\n\nexport default controller({\n  setFavorite: (article) => {\n    if (!currentUser.isAuthenticated) {\n      router.transitionTo('/register');\n\n      return Promise.reject(new Error('The user is not authenticated'));\n    }\n\n    return articleApi.setFavorite({slug: article.slug, isFavorite: !article.favorited})\n      .then((result) => {\n        article.setFavorite(result.article);\n      });\n  }\n});\n","const longFormat = new Intl.DateTimeFormat('en-US', {\n  month: 'short',\n  day: 'numeric',\n  year: 'numeric'\n});\n\nexport const longDate = (date) => longFormat.format(date);\n"],"sourceRoot":""}